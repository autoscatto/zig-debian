name: Build Zig Releases

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 0 * * 0'  # Weekly trigger

jobs:
  fetch_tags:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Fetch Zig Tags
        id: fetch_tags
        run: |
          curl -s https://ziglang.org/download/index.json -o index.json
          TAGS=$(jq -r 'keys[] | select(. != "master")' index.json)

          if [ ! -f processed_tags.json ]; then
            echo '{"processed_tags":[]}' > processed_tags.json
          fi

          PROCESSED_TAGS=$(jq -r '.processed_tags[]?' processed_tags.json)
          NEW_TAGS=$(echo "$TAGS" | grep -vFf <(echo "$PROCESSED_TAGS") || true)

          echo "new_tags=$(echo $NEW_TAGS | jq -R -s -c 'split(\"\\n\")[:-1]')" >> $GITHUB_ENV

  matrix_build:
    needs: fetch_tags
    if: ${{ needs.fetch_tags.outputs.new_tags != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ${{ fromJson(needs.fetch_tags.outputs.new_tags) }}
        arch: [x86_64-linux, aarch64-linux, armv7a-linux]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Zig
        run: |
          chmod +x scripts/build_zig.sh
          ./scripts/build_zig.sh ${{ matrix.tag }} ${{ matrix.arch }}

      - name: Upload DEB to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ matrix.tag }}
          ARCH=${{ matrix.arch }}
          DEB_FILE=$(find . -name "zig_${VERSION}_${ARCH}.deb" -type f)

          if [ -z "$DEB_FILE" ]; then
            echo "Error: DEB file not found for $VERSION $ARCH"
            exit 1
          fi

          gh release upload "$VERSION" "$DEB_FILE" --clobber

      - name: Update Processed Tags
        run: |
          jq -n --argjson new_tags "$(echo ${{ needs.fetch_tags.outputs.new_tags }} | jq -r '.')" '
            {processed_tags: (.processed_tags + $new_tags)}
          ' processed_tags.json > tmp.json && mv tmp.json processed_tags.json